#include <stdio.h>
#include <stdbool.h>

#define MAX 100

int graph[MAX][MAX];
bool visited[MAX];
int queue[MAX];
int front = -1, rear = -1;


void enqueue(int value) {
    if (rear == MAX - 1)
        printf("Queue is full\n");
    else {
        if (front == -1) front = 0;
        queue[++rear] = value;
    }
}


int dequeue() {
    if (front == -1 || front > rear)
        return -1;
    else
        return queue[front++];
}


void bfs(int startVertex, int n) {
    printf("BFS Traversal: ");
    enqueue(startVertex);
    visited[startVertex] = true;

    while (front <= rear) {
        int currentVertex = dequeue();
        printf("%d ", currentVertex);

        for (int i = 0; i < n; i++) {
            if (graph[currentVertex][i] == 1 && !visited[i]) {
                enqueue(i);
                visited[i] = true;
            }
        }
    }
    printf("\n");
}

int main() {
    int n, edges, u, v, startVertex;

    printf("Enter the number of vertices: ");
    scanf("%d", &n);

    printf("Enter the number of edges: ");
    scanf("%d", &edges);


    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            graph[i][j] = 0;
        }
        visited[i] = false;
    }

    printf("Enter the edges (u v):\n");
    for (int i = 0; i < edges; i++) {
        scanf("%d %d", &u, &v);
        graph[u][v] = 1;
        graph[v][u] = 1;
    }

    printf("Enter the starting vertex: ");
    scanf("%d", &startVertex);

    bfs(startVertex, n);

    return 0;
}
