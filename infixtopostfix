#include <stdio.h>
#include <ctype.h>

char stack[100];
int top = -1;

void push(char ele) {
    stack[++top] = ele;
}

char pop() {
    if (top == -1) {
        return '\0'; 
    }
    return stack[top--];
}

int pr(char op) {
    switch(op) {
        case '#': return 0;
        case '(': return 1;
        case '+':
        case '-': return 2;
        case '*':
        case '/': return 3;
        default: return 0;
    }
}

int main() {
    char infix[100], ch;
    int i = 0;

    printf("Enter your infix expression: ");
    scanf("%s", infix);
    push('#');

    while (infix[i] != '\0') {
        if (isalpha(infix[i])) {
            printf("%c", infix[i]); 
        } else if (infix[i] == '(') {
            push(infix[i]);
        } else if (infix[i] == ')') {
            while (stack[top] != '(') {
                if (top == -1) {
                    printf("\nThere was an issue with the expression...\n");
                    return 1; 
                }
                ch = pop();
                printf("%c", ch);
            }
            pop(); 
        } else { 
            while (stack[top] != '#' && pr(infix[i]) <= pr(stack[top])) {
                ch = pop();
                printf("%c", ch);
            }
            push(infix[i]);
        }
        i++;
    }

    while (top != -1) {
        if (stack[top] == '(') {
            printf("\nThere was an issue with the expression...\n");
            return 1; 
        }
        ch = pop();
        printf("%c", ch);
    }

    printf("\n"); 
    return 0;
}
